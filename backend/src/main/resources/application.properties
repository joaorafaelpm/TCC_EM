spring.application.name=pendezzapizza

server.port=8081

# Para quando eu implementar o gateway
# server.servlet.context-path=/api

spring.datasource.url=jdbc:mysql://localhost:3307/${DATABASE_NAME}?createDatabaseIfNotExists=true&serverTimeZone=UTC
spring.datasource.username= ${DATABASE_USERNAME}
spring.datasource.password= ${DATABASE_PASSWORD}

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.flyway.baselineOnMigrate = true

#  Isso cria os scripts do DDL do hibernate (é o que cria as tabelas baseado nas entidades) porém neste caso isso abstrai somente o código, então a gente pode gerar todas as tabelas de um jeito mais seguro com o próprio script do hibernate
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql
spring.flyway.locations=classpath:db/migration, classpath:db/testdata

#Debug do flyway para procurar problemas nas migrations
logging.level.org.flywaydb.core=DEBUG

# Mostra todas as queries SQL feitas pelo Hibernate
spring.jpa.show-sql=true

# (Opcional) Mostra valores dos parametros das queries (ex: "WHERE id = 1")
logging.level.org.hibernate.type.descriptor.sql=TRACE

spring.datasource.hikari.maximum-pool-size=8
spring.datasource.hikari.minimum-idle=3
#10 segundos
spring.datasource.hikari.idle-timeout=10000 